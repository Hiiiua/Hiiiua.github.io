[
  {
    "objectID": "old_index.html",
    "href": "old_index.html",
    "title": "Website",
    "section": "",
    "text": "Hello, Website!"
  },
  {
    "objectID": "posts/welcome/Perceiptive field.html",
    "href": "posts/welcome/Perceiptive field.html",
    "title": "Does perceiptive field matter?",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\nLet’s see if i can make any change\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Logs/Sep_12_2023.html",
    "href": "posts/Logs/Sep_12_2023.html",
    "title": "Sep_12_2023",
    "section": "",
    "text": "Done\n\nFind something here to remove pixels, might be helpful in the future by generating object detection annotations from segmentation annotations.\nHalf way of implementing to_VOC to make our xml files to VOC 2012 format.\nThe network part has been completed, but I’ll commit after a successful training — it just not easy to commit and remove a whole project if I’m making any changes.\nAll the helper functions are in xml_utils, they have been properly commented.\n\nThese functions should be quite general, especially the ones like get_path, get_xml_dict. They can be easily modified to do most xml file related work.\nvisualize_current_xml has some font problem, doesn’t matter though, for now I’m just use it to visualize our annotations. I do have some findings that I overlooked before:\n\nMost polygons (will confirm this in a week) are exclude, which means they don’ t really count as a class, more of a “background”. Maybe useful for training RPN?\nThe rest are quadrilaterals — some are non-rectangular, some are tilted rectangular, some are vertical rectangular. The second should be convenient to use the oriented boxes in the paper mentioned last week. The last one is perfect for current basic model training. There might be some way to transform the first and second one for current training:\n\n1) The most crude one, just to get the maximum and minimum coordinates. This method doesn’t care which case the box coming from. This way guarantees the object in the box, but because we have a lot of shapes and lines going on, it may also introduce misleading information in the learning. But will try this first.\n2) As mentioned above, the first and second case matter if we are attaching the oriented box network to fastrcnn, so I’ll discuss the two cases separately.\n\ni) We actually need to differentiate these two cases before we can proceed. Because we have coordinates of all points, we can calculate the angles at each point by vector operations, if all the angles are 90 degrees, we can put this box into case 2 (tilted rectangular).\nii) If we need a vertical box for current basic fasterrcnn training, a rotation matrix would be helpful.\n\\[\nx_{new} = x * cos(\\theta) - y * sin(\\theta)\\\\\ny_{new} = x * sin(\\theta) + y * cos(\\theta)\n\\]\niii) If we find a box unfortunately falls in the quadrilateral category, we will make it rectangular followed by making it vertical. We first look at the angles, pick the point has angle most close to 90 degrees as reference point, expanding the box to make it a rectangle. Then we can rotate it as what we do to tilted rectangle.\n\n\nNot sure which is the best approach, for now I’m going with the crude approach so we can have some results as a starting point. Hopefully I can have this part completed next week and have a result.\n\n\n\n\n\nTodo\n\nThis semester feels like too many things to do… Already have wait to be done things from the weeks before, I need to have basic results asap before I come up with weird ideas!!"
  },
  {
    "objectID": "posts/Logs/Sep_20_2023.html",
    "href": "posts/Logs/Sep_20_2023.html",
    "title": "Sep_20_2023",
    "section": "",
    "text": "Done\n\nImplemented xml_utils. There are two ways taking care of the quad or oriented rectangles.\n\ncrude_expand_box is taking the xmax, xmin, ymax, ymin no matter what.\nA quad to oriented rectangle to vertical box approach.\n\nAssume we have a quad, we will first use quad_to_rectangle to produce an oriented rectangle coordinates from the quad. This step probably produce negative values, need to take care of this by crop function.\nNow we have an oriented rectangle, we will use oriented_to_vertical. We will use IoU to decide if the oriented box should go clockwise or counter clockwise. For example, we have three rectangles in the following image, the blue oriented one is the oriented rectangle we want to work on, vertical blue and horizontal red are two possible ways to rotate the blue one. Eventually we want to get red, horizontal one because it has a larger intersection of union.\n\n\nMost xml files have been modified.\n\n\n\n\nTodo\n\nThere are chances that quad_to_rectangle produces negative coordinates which is beyond the image scope, so I need to write a crop function to take care of that."
  },
  {
    "objectID": "posts/Logs/Sep_06_2023.html",
    "href": "posts/Logs/Sep_06_2023.html",
    "title": "Sep_06_2023",
    "section": "",
    "text": "Done\n\nStart using IntelliJ to take advantage of debugger to read source code.\nFind a good repo that has most thing structured and well-commented. I cloned this repo and made changes to the FasterRCNN project, the main function should mostly work.\n\nMost of fitting work is import-related. Relative path doesn’t work in my project, but I’m worry about importing the whole script will slow down the code running.\nIn train_utils/coco_eval, import torch.six_ to call a string_class doesn’t work because unable to import `torch._six`. This could because of torch version, what i’m currently working on is “2.0.1”.\nSome highlights of this Repo:\n\nCOCO metrics like mAP (Mean Average Precision) has been nicely set up, so I don’t need to spend time recreating the wheels. We should be able quantitatively evaluate our model not only by how the overall detection works, but also by its performance on large/median/small ground truth boxes. These categorized performance report probably will help us to identify whether the “receiptive filed” guess stands a point or not.\nThe whole structure can be easily edited if we have some new ideas of modifying the structure.\n\n\nRead a paper about generating oriented boxes. Basically it’s replacing the RPN part in Faster RCNN with a new network that propose oriented boxes.\n\nMore than just generating 4 box regression parameters for each box, this network generates anotehr rotation angle parameter \\(\\theta\\) to calculate loss.\n\nIt has a coarse box scores that responsible and then refine the parameters to generate proposal regions.\n\nThis network is similar to RNP in terms of positive/ negative sampling to calculate loss.\nSince is is like a “better-RPN”, this network can be easily benchmark to Fast RCNN for training.\nObviously the RoI’s are better, so does the mAP.\n\n\n\n\nTodos\n\nReimplement split_data function\nReimplement a function to modify xml files, so we could have a result as a starting point for the new model.\n\nProbably use an argument to indicate if I want to do oriented proposals.\nReally need to add is_crowd attribute.\nNeed to add get_width and get_height method in my_dataset.\n\nSkimmed at Samia’s project, it’s a decomposition + a GAN model, need to look into the details to get that run with our data.\n\nCould this be an easier replacement?"
  },
  {
    "objectID": "posts/Logs/Aug_29_2023.html",
    "href": "posts/Logs/Aug_29_2023.html",
    "title": "Aug_29_2023",
    "section": "",
    "text": "classes_dict.json\n\nUse a json file to read classes, it should be easier to rerun the model if we are training with new scheme, which has more data.\n\nVocDataset\n\nUse recurssive parsing function\nAdd area key to target for future calculating UoI\nAdd iscrowd key to target to indicated overlapping objects\n\nData directory tree\n\nTo make dataset instancing easier"
  },
  {
    "objectID": "posts/Logs/Aug_29_2023.html#recent-goals",
    "href": "posts/Logs/Aug_29_2023.html#recent-goals",
    "title": "Aug_29_2023",
    "section": "Recent goals",
    "text": "Recent goals\n\nRewrite xml modification function\n\nW/H of the image –> add a get_height/width function in VocDataset\nOverlapping information as in difficult\nReprocess the xmls\nMake sure the boxes are more accurate\n\nWhat to do if “no object” show up when getting the item\nRemove the rgb in the images"
  },
  {
    "objectID": "posts/Logs/Aug_29_2023.html#future-goals",
    "href": "posts/Logs/Aug_29_2023.html#future-goals",
    "title": "Aug_29_2023",
    "section": "Future goals",
    "text": "Future goals\n\nImplement the rest of the FasterRcnn\nLook into TEED\nAny changes can be made to the receptive field?\nOptimization?"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ideas",
    "section": "",
    "text": "Sep_12_2023\n\n\n\n\n\n\n\nLogs\n\n\n\n\n\n\n\n\n\n\n\nHiiiua\n\n\n\n\n\n\n  \n\n\n\n\nSep_20_2023\n\n\n\n\n\n\n\nLogs\n\n\n\n\n\n\n\n\n\n\n\nHiiiua\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSep_06_2023\n\n\n\n\n\n\n\nLogs\n\n\n\n\n\n\n\n\n\n\n\nSep 6, 2023\n\n\nHiiiua\n\n\n\n\n\n\n  \n\n\n\n\nAug_29_2023\n\n\n\n\n\n\n\nLogs\n\n\n\n\n\n\n\n\n\n\n\nAug 29, 2023\n\n\nHiiiua\n\n\n\n\n\n\n  \n\n\n\n\nDoes perceiptive field matter?\n\n\n\n\n\n\n\nTodos\n\n\n\n\n\n\n\n\n\n\n\nAug 9, 2023\n\n\nHiiiua\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Let’s see what I’ll have"
  }
]